/*
 * This file is generated by jOOQ.
 */
package ingsw_proj_magazzino.db.generated.tables.records;


import ingsw_proj_magazzino.db.generated.tables.Box;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BoxRecord extends UpdatableRecordImpl<BoxRecord> implements Record3<String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Box.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>Box.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>Box.prodotto</code>.
     */
    public void setProdotto(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Box.prodotto</code>.
     */
    public Integer getProdotto() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Box.qta</code>.
     */
    public void setQta(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>Box.qta</code>.
     */
    public Integer getQta() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Box.BOX.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Box.BOX.PRODOTTO;
    }

    @Override
    public Field<Integer> field3() {
        return Box.BOX.QTA;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getProdotto();
    }

    @Override
    public Integer component3() {
        return getQta();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getProdotto();
    }

    @Override
    public Integer value3() {
        return getQta();
    }

    @Override
    public BoxRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public BoxRecord value2(Integer value) {
        setProdotto(value);
        return this;
    }

    @Override
    public BoxRecord value3(Integer value) {
        setQta(value);
        return this;
    }

    @Override
    public BoxRecord values(String value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BoxRecord
     */
    public BoxRecord() {
        super(Box.BOX);
    }

    /**
     * Create a detached, initialised BoxRecord
     */
    public BoxRecord(String id, Integer prodotto, Integer qta) {
        super(Box.BOX);

        setId(id);
        setProdotto(prodotto);
        setQta(qta);
        resetChangedOnNotNull();
    }
}
