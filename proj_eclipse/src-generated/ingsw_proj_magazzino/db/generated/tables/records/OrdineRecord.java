/*
 * This file is generated by jOOQ.
 */
package ingsw_proj_magazzino.db.generated.tables.records;


import ingsw_proj_magazzino.db.generated.tables.Ordine;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OrdineRecord extends UpdatableRecordImpl<OrdineRecord> implements Record5<Integer, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Ordine.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Ordine.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Ordine.tipo</code>.
     */
    public void setTipo(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Ordine.tipo</code>.
     */
    public String getTipo() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Ordine.stato</code>.
     */
    public void setStato(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Ordine.stato</code>.
     */
    public String getStato() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Ordine.dataEm</code>.
     */
    public void setDataem(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Ordine.dataEm</code>.
     */
    public String getDataem() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Ordine.dataCo</code>.
     */
    public void setDataco(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Ordine.dataCo</code>.
     */
    public String getDataco() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Ordine.ORDINE.ID;
    }

    @Override
    public Field<String> field2() {
        return Ordine.ORDINE.TIPO;
    }

    @Override
    public Field<String> field3() {
        return Ordine.ORDINE.STATO;
    }

    @Override
    public Field<String> field4() {
        return Ordine.ORDINE.DATAEM;
    }

    @Override
    public Field<String> field5() {
        return Ordine.ORDINE.DATACO;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTipo();
    }

    @Override
    public String component3() {
        return getStato();
    }

    @Override
    public String component4() {
        return getDataem();
    }

    @Override
    public String component5() {
        return getDataco();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTipo();
    }

    @Override
    public String value3() {
        return getStato();
    }

    @Override
    public String value4() {
        return getDataem();
    }

    @Override
    public String value5() {
        return getDataco();
    }

    @Override
    public OrdineRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public OrdineRecord value2(String value) {
        setTipo(value);
        return this;
    }

    @Override
    public OrdineRecord value3(String value) {
        setStato(value);
        return this;
    }

    @Override
    public OrdineRecord value4(String value) {
        setDataem(value);
        return this;
    }

    @Override
    public OrdineRecord value5(String value) {
        setDataco(value);
        return this;
    }

    @Override
    public OrdineRecord values(Integer value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdineRecord
     */
    public OrdineRecord() {
        super(Ordine.ORDINE);
    }

    /**
     * Create a detached, initialised OrdineRecord
     */
    public OrdineRecord(Integer id, String tipo, String stato, String dataem, String dataco) {
        super(Ordine.ORDINE);

        setId(id);
        setTipo(tipo);
        setStato(stato);
        setDataem(dataem);
        setDataco(dataco);
        resetChangedOnNotNull();
    }
}
