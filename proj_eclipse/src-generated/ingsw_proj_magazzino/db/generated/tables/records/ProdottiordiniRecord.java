/*
 * This file is generated by jOOQ.
 */
package ingsw_proj_magazzino.db.generated.tables.records;


import ingsw_proj_magazzino.db.generated.tables.Prodottiordini;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProdottiordiniRecord extends UpdatableRecordImpl<ProdottiordiniRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ProdottiOrdini.prod</code>.
     */
    public void setProd(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ProdottiOrdini.prod</code>.
     */
    public Integer getProd() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ProdottiOrdini.ordine</code>.
     */
    public void setOrdine(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>ProdottiOrdini.ordine</code>.
     */
    public Integer getOrdine() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>ProdottiOrdini.qta</code>.
     */
    public void setQta(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>ProdottiOrdini.qta</code>.
     */
    public Integer getQta() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Prodottiordini.PRODOTTIORDINI.PROD;
    }

    @Override
    public Field<Integer> field2() {
        return Prodottiordini.PRODOTTIORDINI.ORDINE;
    }

    @Override
    public Field<Integer> field3() {
        return Prodottiordini.PRODOTTIORDINI.QTA;
    }

    @Override
    public Integer component1() {
        return getProd();
    }

    @Override
    public Integer component2() {
        return getOrdine();
    }

    @Override
    public Integer component3() {
        return getQta();
    }

    @Override
    public Integer value1() {
        return getProd();
    }

    @Override
    public Integer value2() {
        return getOrdine();
    }

    @Override
    public Integer value3() {
        return getQta();
    }

    @Override
    public ProdottiordiniRecord value1(Integer value) {
        setProd(value);
        return this;
    }

    @Override
    public ProdottiordiniRecord value2(Integer value) {
        setOrdine(value);
        return this;
    }

    @Override
    public ProdottiordiniRecord value3(Integer value) {
        setQta(value);
        return this;
    }

    @Override
    public ProdottiordiniRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProdottiordiniRecord
     */
    public ProdottiordiniRecord() {
        super(Prodottiordini.PRODOTTIORDINI);
    }

    /**
     * Create a detached, initialised ProdottiordiniRecord
     */
    public ProdottiordiniRecord(Integer prod, Integer ordine, Integer qta) {
        super(Prodottiordini.PRODOTTIORDINI);

        setProd(prod);
        setOrdine(ordine);
        setQta(qta);
        resetChangedOnNotNull();
    }
}
