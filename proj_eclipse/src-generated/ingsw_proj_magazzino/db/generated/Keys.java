/*
 * This file is generated by jOOQ.
 */
package ingsw_proj_magazzino.db.generated;


import ingsw_proj_magazzino.db.generated.tables.Box;
import ingsw_proj_magazzino.db.generated.tables.Movimentazione;
import ingsw_proj_magazzino.db.generated.tables.Ordine;
import ingsw_proj_magazzino.db.generated.tables.Prodottiordini;
import ingsw_proj_magazzino.db.generated.tables.Prodotto;
import ingsw_proj_magazzino.db.generated.tables.Utente;
import ingsw_proj_magazzino.db.generated.tables.records.BoxRecord;
import ingsw_proj_magazzino.db.generated.tables.records.MovimentazioneRecord;
import ingsw_proj_magazzino.db.generated.tables.records.OrdineRecord;
import ingsw_proj_magazzino.db.generated.tables.records.ProdottiordiniRecord;
import ingsw_proj_magazzino.db.generated.tables.records.ProdottoRecord;
import ingsw_proj_magazzino.db.generated.tables.records.UtenteRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BoxRecord> BOX__PK_BOX = Internal.createUniqueKey(Box.BOX, DSL.name("pk_Box"), new TableField[] { Box.BOX.ID }, true);
    public static final UniqueKey<MovimentazioneRecord> MOVIMENTAZIONE__PK_MOVIMENTAZIONE = Internal.createUniqueKey(Movimentazione.MOVIMENTAZIONE, DSL.name("pk_Movimentazione"), new TableField[] { Movimentazione.MOVIMENTAZIONE.ORDINE, Movimentazione.MOVIMENTAZIONE.PROD, Movimentazione.MOVIMENTAZIONE.BOX }, true);
    public static final UniqueKey<OrdineRecord> ORDINE__PK_ORDINE = Internal.createUniqueKey(Ordine.ORDINE, DSL.name("pk_Ordine"), new TableField[] { Ordine.ORDINE.ID }, true);
    public static final UniqueKey<ProdottiordiniRecord> PRODOTTIORDINI__PK_PRODOTTIORDINI = Internal.createUniqueKey(Prodottiordini.PRODOTTIORDINI, DSL.name("pk_ProdottiOrdini"), new TableField[] { Prodottiordini.PRODOTTIORDINI.PROD, Prodottiordini.PRODOTTIORDINI.ORDINE }, true);
    public static final UniqueKey<ProdottoRecord> PRODOTTO__PK_PRODOTTO = Internal.createUniqueKey(Prodotto.PRODOTTO, DSL.name("pk_Prodotto"), new TableField[] { Prodotto.PRODOTTO.ID }, true);
    public static final UniqueKey<UtenteRecord> UTENTE__PK_UTENTE = Internal.createUniqueKey(Utente.UTENTE, DSL.name("pk_Utente"), new TableField[] { Utente.UTENTE.MATRICOLA }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BoxRecord, ProdottoRecord> BOX__FK_BOX_PK_PRODOTTO = Internal.createForeignKey(Box.BOX, DSL.name("fk_Box_pk_Prodotto"), new TableField[] { Box.BOX.PRODOTTO }, Keys.PRODOTTO__PK_PRODOTTO, new TableField[] { Prodotto.PRODOTTO.ID }, true);
    public static final ForeignKey<MovimentazioneRecord, BoxRecord> MOVIMENTAZIONE__FK_MOVIMENTAZIONE_PK_BOX = Internal.createForeignKey(Movimentazione.MOVIMENTAZIONE, DSL.name("fk_Movimentazione_pk_Box"), new TableField[] { Movimentazione.MOVIMENTAZIONE.BOX }, Keys.BOX__PK_BOX, new TableField[] { Box.BOX.ID }, true);
    public static final ForeignKey<MovimentazioneRecord, OrdineRecord> MOVIMENTAZIONE__FK_MOVIMENTAZIONE_PK_ORDINE = Internal.createForeignKey(Movimentazione.MOVIMENTAZIONE, DSL.name("fk_Movimentazione_pk_Ordine"), new TableField[] { Movimentazione.MOVIMENTAZIONE.ORDINE }, Keys.ORDINE__PK_ORDINE, new TableField[] { Ordine.ORDINE.ID }, true);
    public static final ForeignKey<MovimentazioneRecord, ProdottoRecord> MOVIMENTAZIONE__FK_MOVIMENTAZIONE_PK_PRODOTTO = Internal.createForeignKey(Movimentazione.MOVIMENTAZIONE, DSL.name("fk_Movimentazione_pk_Prodotto"), new TableField[] { Movimentazione.MOVIMENTAZIONE.PROD }, Keys.PRODOTTO__PK_PRODOTTO, new TableField[] { Prodotto.PRODOTTO.ID }, true);
    public static final ForeignKey<MovimentazioneRecord, UtenteRecord> MOVIMENTAZIONE__FK_MOVIMENTAZIONE_PK_UTENTE = Internal.createForeignKey(Movimentazione.MOVIMENTAZIONE, DSL.name("fk_Movimentazione_pk_Utente"), new TableField[] { Movimentazione.MOVIMENTAZIONE.MAGAZZINIERE }, Keys.UTENTE__PK_UTENTE, new TableField[] { Utente.UTENTE.MATRICOLA }, true);
    public static final ForeignKey<ProdottiordiniRecord, OrdineRecord> PRODOTTIORDINI__FK_PRODOTTIORDINI_PK_ORDINE = Internal.createForeignKey(Prodottiordini.PRODOTTIORDINI, DSL.name("fk_ProdottiOrdini_pk_Ordine"), new TableField[] { Prodottiordini.PRODOTTIORDINI.ORDINE }, Keys.ORDINE__PK_ORDINE, new TableField[] { Ordine.ORDINE.ID }, true);
    public static final ForeignKey<ProdottiordiniRecord, ProdottoRecord> PRODOTTIORDINI__FK_PRODOTTIORDINI_PK_PRODOTTO = Internal.createForeignKey(Prodottiordini.PRODOTTIORDINI, DSL.name("fk_ProdottiOrdini_pk_Prodotto"), new TableField[] { Prodottiordini.PRODOTTIORDINI.PROD }, Keys.PRODOTTO__PK_PRODOTTO, new TableField[] { Prodotto.PRODOTTO.ID }, true);
}
